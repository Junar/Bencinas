package com.junar.searchbenzine;

import java.text.NumberFormat;
import java.util.Iterator;

import android.content.Context;
import android.location.Location;
import cl.gob.datos.bencinas.R;
import cl.gob.datos.bencinas.helpers.Settings;

import com.google.android.gms.maps.model.BitmapDescriptor;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.LatLng;
import com.google.maps.android.clustering.ClusterItem;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table BENZINE.
 */
public class Benzine implements ClusterItem {

    public final static String BENZINE_GAS_93 = "GAS_93";
    public final static String BENZINE_GAS_95 = "GAS_95";
    public final static String BENZINE_GAS_97 = "GAS_97";
    public final static String BENZINE_DISEL = "DIESEL";
    public final static String BENZINE_KEROSENE = "KEROSENE";
    private Long id;
    private String name;
    private Double latitude;
    private Double longitude;
    private Double gasolina93;
    private Double gasolina95;
    private Double gasolina97;
    private Double diesel;
    private Double kerosene;
    private String address;
    private String schedule;
    private float distance;

    public Benzine() {
    }

    public static enum Marca {
        COPEC(R.drawable.bencinera_copec), JLC(R.drawable.bencinera_jlc), PETROBRAS(
                R.drawable.bencinera_petrobras), SHELL(
                R.drawable.bencinera_shell), TERPEL(R.drawable.bencinera_terpel), VIVA(
                R.drawable.bencinera_viva);

        private int id;

        Marca(int id) {
            this.id = id;
        }

        public int getResourceId() {
            return id;
        }

        public static int findIdByName(String name) {
            Marca[] values = Marca.values();

            for (Marca marca : values) {
                if (name.equalsIgnoreCase(marca.name())) {
                    return marca.getResourceId();
                }
            }
            return R.drawable.bencinera_unknown;
        }
    }

    public Benzine(Long id) {
        this.id = id;
    }

    public Benzine(Long id, String name, Double latitude, Double longitude,
            Double gasolina93, Double gasolina95, Double gasolina97,
            Double diesel, Double kerosene, String address, String schedule) {
        this.id = id;
        this.name = name;
        this.latitude = latitude;
        this.longitude = longitude;
        this.gasolina93 = gasolina93;
        this.gasolina95 = gasolina95;
        this.gasolina97 = gasolina97;
        this.diesel = diesel;
        this.kerosene = kerosene;
        this.address = address;
        this.schedule = schedule;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Double getLatitude() {
        return latitude;
    }

    public void setLatitude(Double latitude) {
        this.latitude = latitude;
    }

    public Double getLongitude() {
        return longitude;
    }

    public void setLongitude(Double longitude) {
        this.longitude = longitude;
    }

    public Double getGasolina93() {
        return gasolina93;
    }

    public void setGasolina93(Double gasolina93) {
        this.gasolina93 = gasolina93;
    }

    public Double getGasolina95() {
        return gasolina95;
    }

    public void setGasolina95(Double gasolina95) {
        this.gasolina95 = gasolina95;
    }

    public Double getGasolina97() {
        return gasolina97;
    }

    public void setGasolina97(Double gasolina97) {
        this.gasolina97 = gasolina97;
    }

    public Double getDiesel() {
        return diesel;
    }

    public void setDiesel(Double diesel) {
        this.diesel = diesel;
    }

    public Double getKerosene() {
        return kerosene;
    }

    public void setKerosene(Double kerosene) {
        this.kerosene = kerosene;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public float getDistance() {
        return distance;
    }

    public void setDistance(float distance) {
        this.distance = distance;
    }

    public BitmapDescriptor getMarkerIcon() {
        BitmapDescriptor bitmapDescriptor = BitmapDescriptorFactory
                .fromResource(R.drawable.marker);
        return bitmapDescriptor;
    }

    @Override
    public String toString() {
        return "Benzine [name=" + name + ",address=" + address + ", latitude="
                + latitude + ", longitude=" + longitude + ", distance="
                + distance + "]";
    }

    public String getSchedule() {
        return schedule;
    }

    public void setSchedule(String schedule) {
        this.schedule = schedule;
    }

    @Override
    public LatLng getPosition() {
        if (latitude != 0 && longitude != 0) {
            return new LatLng(latitude, longitude);
        }
        return null;
    }

    public float getDistanceTo(LatLng currentLocation) {
        float distance = 0;
        if (getLatitude() != 0 && getLongitude() != 0
                && currentLocation != null) {
            float[] results = new float[1];
            if (getDistance() > 0) {
                results[0] = getDistance();
            } else {
                Location.distanceBetween(currentLocation.latitude,
                        currentLocation.longitude, getLatitude(),
                        getLongitude(), results);
            }
            distance = results[0];
        }
        return distance;
    }

    public String getDistanceStringTo(LatLng currentLocation) {
        float distance = getDistanceTo(currentLocation);
        NumberFormat nf = NumberFormat.getInstance();
        nf.setMaximumFractionDigits(0);
        nf.setMinimumFractionDigits(0);
        String distanceStr = nf.format(distance) + "Mts";

        if (distance > 1000) {
            nf = NumberFormat.getInstance();
            nf.setMaximumFractionDigits(2);
            nf.setMinimumFractionDigits(2);
            distanceStr = nf.format(distance / 1000) + "Km";
        }
        return distanceStr;
    }

    public String getCurrencyPrice(double price) {
        NumberFormat nf = NumberFormat.getInstance();
        nf.setMaximumFractionDigits(0);
        nf.setMinimumFractionDigits(0);
        return "$" + nf.format(price);
    }

    public Double getSelectedBenzinePrice(Context context) {
        String type = Settings.getBenzineType(context);
        Double price = 0.0d;
        if (type.equalsIgnoreCase(BENZINE_GAS_93)) {
            price = getGasolina93();
        } else if (type.equalsIgnoreCase(BENZINE_GAS_95)) {
            price = getGasolina95();
        } else if (type.equalsIgnoreCase(BENZINE_GAS_97)) {
            price = getGasolina97();
        } else if (type.equalsIgnoreCase(BENZINE_DISEL)) {
            price = getDiesel();
        } else if (type.equalsIgnoreCase(BENZINE_KEROSENE)) {
            price = getKerosene();
        }
        return price;
    }

    public boolean hasCurrentBenzineType(Context context) {
        String type = Settings.getBenzineType(context);
        if (type.equalsIgnoreCase(BENZINE_GAS_93) && getGasolina93() != null) {
            return true;
        } else if (type.equalsIgnoreCase(BENZINE_GAS_95)
                && getGasolina95() != null) {
            return true;
        } else if (type.equalsIgnoreCase(BENZINE_GAS_97)
                && getGasolina97() != null) {
            return true;
        } else if (type.equalsIgnoreCase(BENZINE_DISEL) && getDiesel() != null) {
            return true;
        } else if (type.equalsIgnoreCase(BENZINE_KEROSENE)
                && getKerosene() != null) {
            return true;
        }
        return false;
    }
}
